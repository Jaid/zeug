import fs from 'fs-extra';
import yaml from 'yaml';
export const defaultYamlOptions = {
    lineWidth: 0,
    minContentWidth: 0,
    nullStr: `~`,
    schema: `core`,
    singleQuote: true,
};
export const defaultCompactYamlOptions = {
    ...defaultYamlOptions,
    indent: 1,
};
export const stringifyYaml = (input, options = defaultYamlOptions) => yaml.stringify(input, undefined, options);
export const stringifyCompactYaml = (input) => yaml.stringify(input, undefined, defaultCompactYamlOptions);
export const makeYamlFile = async (file, input, options) => {
    await fs.outputFile(file, stringifyYaml(input, options));
};
export const makeCompactYamlFile = async (file, input) => {
    await makeYamlFile(file, input, defaultCompactYamlOptions);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9ZYW1sLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RvWWFtbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFDekIsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFBO0FBTXZCLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUF5QjtJQUN0RCxTQUFTLEVBQUUsQ0FBQztJQUNaLGVBQWUsRUFBRSxDQUFDO0lBQ2xCLE9BQU8sRUFBRSxHQUFHO0lBQ1osTUFBTSxFQUFFLE1BQU07SUFDZCxXQUFXLEVBQUUsSUFBSTtDQUNsQixDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQXlCO0lBQzdELEdBQUcsa0JBQWtCO0lBQ3JCLE1BQU0sRUFBRSxDQUFDO0NBQ1YsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUFDLEtBQWdCLEVBQUUsVUFBZ0Msa0JBQWtCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUVoSixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSx5QkFBeUIsQ0FBQyxDQUFBO0FBRXJILE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxLQUFLLEVBQUUsSUFBWSxFQUFFLEtBQWdCLEVBQUUsT0FBOEIsRUFBRSxFQUFFO0lBQ25HLE1BQU0sRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFBO0FBQzFELENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLEtBQUssRUFBRSxJQUFZLEVBQUUsS0FBZ0IsRUFBRSxFQUFFO0lBQzFFLE1BQU0sWUFBWSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUseUJBQXlCLENBQUMsQ0FBQTtBQUM1RCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMtZXh0cmEnXG5pbXBvcnQgeWFtbCBmcm9tICd5YW1sJ1xuXG5leHBvcnQgdHlwZSBTdHJpbmdpZnlZYW1sT3B0aW9ucyA9IHlhbWwuRG9jdW1lbnRPcHRpb25zICYgeWFtbC5TY2hlbWFPcHRpb25zICYgeWFtbC5QYXJzZU9wdGlvbnMgJiB5YW1sLkNyZWF0ZU5vZGVPcHRpb25zICYgeWFtbC5Ub1N0cmluZ09wdGlvbnNcblxuZXhwb3J0IHR5cGUgWWFtbElucHV0ID0gUGFyYW1ldGVyczx0eXBlb2YgeWFtbC5zdHJpbmdpZnk+WzBdXG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0WWFtbE9wdGlvbnM6IFN0cmluZ2lmeVlhbWxPcHRpb25zID0ge1xuICBsaW5lV2lkdGg6IDAsXG4gIG1pbkNvbnRlbnRXaWR0aDogMCxcbiAgbnVsbFN0cjogYH5gLFxuICBzY2hlbWE6IGBjb3JlYCxcbiAgc2luZ2xlUXVvdGU6IHRydWUsXG59XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0Q29tcGFjdFlhbWxPcHRpb25zOiBTdHJpbmdpZnlZYW1sT3B0aW9ucyA9IHtcbiAgLi4uZGVmYXVsdFlhbWxPcHRpb25zLFxuICBpbmRlbnQ6IDEsXG59XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdpZnlZYW1sID0gKGlucHV0OiBZYW1sSW5wdXQsIG9wdGlvbnM6IFN0cmluZ2lmeVlhbWxPcHRpb25zID0gZGVmYXVsdFlhbWxPcHRpb25zKSA9PiB5YW1sLnN0cmluZ2lmeShpbnB1dCwgdW5kZWZpbmVkLCBvcHRpb25zKVxuXG5leHBvcnQgY29uc3Qgc3RyaW5naWZ5Q29tcGFjdFlhbWwgPSAoaW5wdXQ6IFlhbWxJbnB1dCkgPT4geWFtbC5zdHJpbmdpZnkoaW5wdXQsIHVuZGVmaW5lZCwgZGVmYXVsdENvbXBhY3RZYW1sT3B0aW9ucylcblxuZXhwb3J0IGNvbnN0IG1ha2VZYW1sRmlsZSA9IGFzeW5jIChmaWxlOiBzdHJpbmcsIGlucHV0OiBZYW1sSW5wdXQsIG9wdGlvbnM/OiBTdHJpbmdpZnlZYW1sT3B0aW9ucykgPT4ge1xuICBhd2FpdCBmcy5vdXRwdXRGaWxlKGZpbGUsIHN0cmluZ2lmeVlhbWwoaW5wdXQsIG9wdGlvbnMpKVxufVxuXG5leHBvcnQgY29uc3QgbWFrZUNvbXBhY3RZYW1sRmlsZSA9IGFzeW5jIChmaWxlOiBzdHJpbmcsIGlucHV0OiBZYW1sSW5wdXQpID0+IHtcbiAgYXdhaXQgbWFrZVlhbWxGaWxlKGZpbGUsIGlucHV0LCBkZWZhdWx0Q29tcGFjdFlhbWxPcHRpb25zKVxufVxuIl19